@model DataLTK.DeThi

@{
    ViewBag.Title = "Tạo mới đề thi";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript">
    function ShowPreview(input) {
        if (input.files && input.files[0]) {
            var ImageDir = new FileReader();
            ImageDir.onload = function (e) {
                $('#audioPrev').attr('src', e.target.result)
            }
            ImageDir.readAsDataURL(input.files[0]);
        }
    }
</script>

<div class="col-md-12 col-sm-12 col-xs-12">
    <div class="x_panel">
        <div class="x_title">
            <h2>Đề thi <small>Thêm mới</small></h2>
            <ul class="nav navbar-right panel_toolbox">
                <li>
                    <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                </li>
                <li class="dropdown">
                    <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false"><i class="fa fa-wrench"></i></a>
                    <ul class="dropdown-menu" role="menu">
                        <li>
                            <a href="#">Settings 1</a>
                        </li>
                        <li>
                            <a href="#">Settings 2</a>
                        </li>
                    </ul>
                </li>
                <li>
                    <a class="close-link"><i class="fa fa-close"></i></a>
                </li>
            </ul>
            <div class="clearfix"></div>
        </div>

        @using (Html.BeginForm("Create", "DeThi", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="x_content">

                <div class="form-group">
                    @Html.LabelFor(model => model.MaMon, "Môn thi", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("MaMon", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.MaMon, "", new { @class = "text-danger" })
                    </div>
                </div>

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.MoTa, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.MoTa, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.MoTa, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LoaiDe, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LoaiDe, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.LoaiDe, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MaxQuiz, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.MaxQuiz, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.MaxQuiz, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("Status", new List<SelectListItem>
                           {
                               new SelectListItem{ Text = "Mở", Value = "True"},
                               new SelectListItem{ Text = "Đóng", Value = "False"}
                           }, "Trạng thái", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Time, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Time, new { htmlAttributes = new { @class = "form-control", @required = "required", @placeholder = "Đơn vị phút" } })
                        @Html.ValidationMessageFor(model => model.Time, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Audio, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <audio controls>
                            <source src="" type="audio/mpeg" id="audioPrev">
                            Your browser does not support the audio element.
                        </audio>
                        <input type="file" class="form-control" accept=".mp3" name="fileAudio" onchange="ShowPreview(this)"/>
                        @Html.ValidationMessageFor(model => model.Audio, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Thêm" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Quay Lại", "Index")
        </div>
        </div>
</div>